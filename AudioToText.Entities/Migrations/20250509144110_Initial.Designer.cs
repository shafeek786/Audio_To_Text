// <auto-generated />
using System;
using AudioToText.Entities.DataBaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AudioToText.Entities.Migrations
{
    [DbContext(typeof(AudioDbContext))]
    [Migration("20250509144110_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AudioFileSrtSegment", b =>
                {
                    b.Property<long>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("SegmentId"));

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("interval");

                    b.Property<long>("ProcessedFileGuid")
                        .HasColumnType("bigint");

                    b.Property<int>("SegmentOrder")
                        .HasColumnType("integer");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("interval");

                    b.Property<string>("TranscriptText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("SegmentId");

                    b.HasIndex("ProcessedFileGuid");

                    b.ToTable("AudioFileSrtSegments");
                });

            modelBuilder.Entity("AudioToText.Entities.SubDomains.Audio.Modles.AudioFile", b =>
                {
                    b.Property<long>("ProcessedFileGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ProcessedFileGuid"));

                    b.Property<string>("AudioFilePath")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ConvertedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RetryCount")
                        .HasColumnType("integer");

                    b.Property<string>("SrtText")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Transcription")
                        .HasColumnType("text");

                    b.HasKey("ProcessedFileGuid");

                    b.ToTable("AudioFiles");
                });

            modelBuilder.Entity("AudioFileSrtSegment", b =>
                {
                    b.HasOne("AudioToText.Entities.SubDomains.Audio.Modles.AudioFile", "AudioFile")
                        .WithMany("AudioFileSrtSegments")
                        .HasForeignKey("ProcessedFileGuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AudioFile");
                });

            modelBuilder.Entity("AudioToText.Entities.SubDomains.Audio.Modles.AudioFile", b =>
                {
                    b.Navigation("AudioFileSrtSegments");
                });
#pragma warning restore 612, 618
        }
    }
}
